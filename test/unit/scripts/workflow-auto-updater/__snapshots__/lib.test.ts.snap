// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`updateWorkflow loads workflow file paths then updates them 1`] = `
"name: Adapter changes accompanied by a changeset

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  # Changeset check
  adapter-change-has-changeset:
    name: Adapter changes accompanied by a changeset
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Adapter changes accompanied by a changeset
        continue-on-error: true

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check whether adapter change also has a changeset
        id: adapter_change_has_changeset
        run: ./.github/isvalidadapterchange.sh
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 2`] = `
"name: Airtable Master List Generation

on:
  push:
    branches:
      - master

jobs:
  airtable-generation:
    name: Airtable Master List Generation
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Airtable Master List Generation
        continue-on-error: true

      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: yarn

      - name: Airtable generation
        run: |
          yarn generate:master-list -v -o airtable
          echo \\"Airtable Master List generated successfully.\\"
        env:
          AIRTABLE_API_KEY: \${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: \${{ secrets.AIRTABLE_BASE_ID }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 3`] = `
"name: Auto update open PRs

on:
  push:
    branches:
      - develop

jobs:
  autoupdate:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: autoupdate
        continue-on-error: true

      - name: Automatically update PR
        uses: smartcontractkit/update-pr-branch@master
        with:
          token: \${{ secrets.AUTOREBASE_TOKEN }}
          base: 'develop'
          required_approval_count: 1
          require_passed_checks: false
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 4`] = `
"name: 'Push develop to private ECR'

on:
  push:
    branches:
      - develop

jobs:
  push-chainlink-develop:
    runs-on: ubuntu-20.04
    environment: build-develop
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: push-chainlink-develop
        continue-on-error: true
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Build, sign and publish chainlink image
        uses: ./.github/actions/build-sign-publish-chainlink
        with:
          publish: true
          aws-role-to-assume: \${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
          aws-role-duration-seconds: \${{ secrets.AWS_ROLE_DURATION_SECONDS }}
          aws-region: \${{ secrets.AWS_REGION }}
          ecr-hostname: \${{ secrets.AWS_DEVELOP_ECR_HOSTNAME }}
          ecr-image-name: chainlink
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 5`] = `
"##
# This workflow needs to be ran because \`build-sign-publish-chainlink\` is 
# a required check but we do not want our release branches to build and
# publish images. Instead we use tags.
# If the workflow does not run, the required check will never pass.
##

name: 'Build Chainlink and Publish'

on:
  push:
    branches:
      - release/*

jobs:
  build-sign-publish-chainlink:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: build-sign-publish-chainlink
        continue-on-error: true

      - run: 'echo \\"No job required\\"'
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 6`] = `
"name: 'Build Chainlink and Publish'

on:
  # Mimics old circleci behaviour
  push:
    tags:
      - 'v*'
    branches:
      - master

jobs:
  build-sign-publish-chainlink:
    runs-on: ubuntu-20.04
    environment: build-publish
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: build-sign-publish-chainlink
        continue-on-error: true

      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Build, sign and publish chainlink image
        uses: ./.github/actions/build-sign-publish-chainlink
        with:
          publish: true
          aws-role-to-assume: \${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
          aws-role-duration-seconds: \${{ secrets.AWS_ROLE_DURATION_SECONDS }}
          aws-region: \${{ secrets.AWS_REGION }}
          sign-images: true
          sign-method: 'keypair'
          cosign-private-key: \${{ secrets.COSIGN_PRIVATE_KEY }}
          cosign-public-key: \${{ secrets.COSIGN_PUBLIC_KEY }}
          cosign-password: \${{ secrets.COSIGN_PASSWORD }}
          verify-signature: true
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 7`] = `
"name: 'Build Chainlink'

on:
  pull_request:
  push:
    branches:
      - master

jobs:

  build-chainlink:
    runs-on: ubuntu-20.04
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: build-chainlink
        continue-on-error: true

      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Build chainlink image
        uses: ./.github/actions/build-sign-publish-chainlink
        with:
          publish: false
          sign-images: false
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 8`] = `
"#
# This action checks PRs to see if any CHANGELOG* files were updated.
# If none were, it will add a message to the PR asking if it would make sense to do so.
#
name: Changelog

on: pull_request

jobs:
  changelog:
    # For security reasons, GITHUB_TOKEN is read-only on forks, so we cannot leave comments on PRs.
    # This check skips the job if it is detected we are running on a fork.
    if: \${{ github.event.pull_request.head.repo.full_name == 'smartcontractkit/chainlink' }}
    name: Changelog checker
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Changelog checker
        continue-on-error: true
      - name: Check for changed files
        id: changedfiles
        uses: umani/changed-files@1d252c611c64289d35243fc37ece7323ea5e93e1 # Version 3.3.0
        with:
          repo-token: \${{ secrets.GITHUB_TOKEN }}
          pattern: '^docs/CHANGELOG.*$'
      - name: Make a comment
        uses: unsplash/comment-on-pr@ffe8f97ccc63ce12c3c23c6885b169db67958d3b # Version v1.2.0
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        if: contains(steps.changedfiles.outputs.files_updated, 'CHANGELOG') != true && contains(steps.changedfiles.outputs.files_created, 'CHANGELOG') != true
        with:
          msg: \\"I see that you haven't updated any CHANGELOG files. Would it make sense to do so?\\"
          check_for_duplicate_msg: true
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 9`] = `
"name: Changesets

on:
  push:
    branches:
      - main

jobs:
  changesets:
    name: Changesets
    runs-on: ubuntu-latest
    steps:
      # Checkout this repository
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Changesets
        continue-on-error: true

      - name: Checkout Repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          token: \${{ secrets.PERSONAL_ACCESS_TOKEN }}
      # Get tool versions
      - name: Get tool versions
        uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      # Install nix
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      # Set up Node.js
      - name: Setup Node.js \${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@master
        with:
          node-version: \${{ steps.tool-versions.outputs.nodejs_version }}
      # Install dependencies using yarn
      - name: Install Dependencies
        run: nix develop -c yarn install --frozen-lockfile
      # Create PR that will update versions or trigger publish
      - name: Create Release Pull Request
        uses: changesets/action@master
        id: changesets
        with:
          publish: nix develop -c yarn release
        env:
          GITHUB_TOKEN: \${{ secrets.PERSONAL_ACCESS_TOKEN }}
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 10`] = `
"./test/fixtures/workflows/ci-core.yml:9:3
        The job name of \\"Core Tests\\" is not unique for the matrix. Create a unique job name using a matrix expression."
`;

exports[`updateWorkflow loads workflow file paths then updates them 11`] = `
"name: Clean up on PR close

on:
  pull_request:
    types: [ closed ]
jobs:
  cleanup-ephemeral-adapters-on-pr-close:
    name: Cleanup Ephemeral Adapters used for testing
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Cleanup Ephemeral Adapters used for testing
        continue-on-error: true

      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.QA_SDLC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.QA_SDLC_AWS_SECRET_KEY }}
          aws-region: \${{ secrets.QA_SDLC_AWS_REGION }}
          role-to-assume: \${{ secrets.QA_SDLC_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: \${{ secrets.QA_SDLC_KUBECONFIG }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn and setup project
        run: |
          npm install -g yarn
          yarn install
          yarn setup
      - name: cleaning up adapters
        env:
          PR_NUMBER: \${{ github.event.number }}
        run: |
          # Build the list of adapters using the PR number
          ADAPTER_NAMES=$(kubectl get deployments --namespace adapters | awk '{print $1;}' | grep \\"\${PR_NUMBER}$\\" | awk -F'-' '{print $3;}')
          for adapter in \${ADAPTER_NAMES}; do
            # stop the k6 pod 
            NAME=k6-\${PR_NUMBER}-\${adapter} yarn qa:adapter stop k6 \${PR_NUMBER} || true
            # stop the adapter pod
            yarn qa:adapter stop \${adapter} \${PR_NUMBER} || true
          done
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 12`] = `
"name: Code Quality

on:
  push:
    branches:
      - staging
      - trying
      - rollup
  pull_request:


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Lint
        continue-on-error: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: \\"16\\"
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: \${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles('yarn.lock') }}
          restore-keys: |
            \${{ runner.os }}-build-\${{ env.cache-name }}-
            \${{ runner.os }}-build-
            \${{ runner.os }}-
      - name: Run yarn install
        run: yarn install --frozen-lockfile
      - name: Run yarn lint
        run: yarn lint
  prettier:
    name: Prettier Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Prettier Formatting
        continue-on-error: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: \\"16\\"
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: \${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles('yarn.lock') }}
          restore-keys: |
            \${{ runner.os }}-build-\${{ env.cache-name }}-
            \${{ runner.os }}-build-
            \${{ runner.os }}-
      - name: Run yarn install
        run: yarn install --frozen-lockfile
      - name: Run prettier check
        run: yarn prettier:check
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 13`] = `
"./test/fixtures/workflows/codeql-analysis.yml:17:3
        The job name of \\"Analyze\\" is not unique for the matrix. Create a unique job name using a matrix expression."
`;

exports[`updateWorkflow loads workflow file paths then updates them 14`] = `
"name: Consume changesets

on:
  push:
    branches:
      - develop

jobs:
  consume-changesets:
    name: Consume changesets
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Consume changesets
        continue-on-error: true

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: yarn

      - name: Get release notes
        run: yarn get-release-notes

      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          version: yarn changeset version
          title: 'Consume changesets'
          commit: 'Consume changesets'
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}

      - name: Build Repo
        run: yarn setup

      - name: Generate Documentation
        run: |
          yarn generate:master-list -v
          yarn generate:readme -a -v
          git add .
          yarn lint-staged
          git commit --amend --no-edit
          git push --force
          echo \\"README(s) generated successfully.\\"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 15`] = `
"# This action acts as a signal dispatcher that fires whenever the release process has
# successfully completed. The listening workflow within the infra-k8s repository has
# a corresponding event handler to generate releases based on this signal

on:
  workflow_run:
    workflows: [ Release ]
    types: [ completed ]

jobs:
  on-success:
    environment: InfraK8s
    runs-on: ubuntu-latest
    if: \${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: on-success
        continue-on-error: true

      - run: gh workflow run --repo smartcontractkit/infra-k8s updater.yaml -F image-updater-head-branch=image-updater/adapters -F pr-delay=60
        env:
          GITHUB_TOKEN: \${{ secrets.INFRA_K8s_PAT }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 16`] = `
"on:
  push:
    branches:
      - develop
      - main
  pull_request:


name: contracts

jobs:
  contract-tests:
    name: Contract tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Contract tests
        continue-on-error: true

      - name: Checkout sources
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1

      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Run unit tests
        run: nix develop -c ./scripts/test.sh
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 17`] = `
"##
# This workflow needs to be ran in case it is a required check and
# we conditionally only run the \`dependency-check\` workflow when certain
# paths change.
# If the workflow does not run, and it is ever marked as required,
# then the check will never pass.
# This is GitHub's workaround:
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#example
##

name: Dependency Vulnerability Check

on:
  push:
    paths-ignore:
      - '**/go.mod'
      - '**/go.sum'
jobs:
  Go:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Go
        continue-on-error: true

      - run: 'echo \\"No job required\\" '
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 18`] = `
"##
# NOTE: any changes to the event triggers or the paths here should be reflected in:
#       dependency-check-paths-ignore.yml
##

name: Dependency Vulnerability Check

on:
  push:
    paths:
      - '**/go.mod'
      - '**/go.sum'
jobs:
  Go:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Go
        continue-on-error: true

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
        id: go

      - name: Write Go Modules list
        run: go list -json -m all > go.list

      - name: Check vulnerabilities
        uses: sonatype-nexus-community/nancy-github-action@main
        with:
          nancyVersion: \\"v1.0.22\\"
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 19`] = `
"name: E2E Custom image build tests
on:
  push:
  workflow_dispatch:
    inputs:
      cl_branch_ref:
        description: Chainlink repo branch to integrate with
        required: true
        default: develop
        type: string

jobs:
  e2e_custom_build_custom_chainlink_image:
    name: E2E Custom Build Custom CL Image
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: E2E Custom Build Custom CL Image
        continue-on-error: true

      - name: Build Image
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/build-image@7d405e28e1419c0a48198793e6647005c409f4cf # v2.0.4
        with:
          cl_repo: smartcontractkit/chainlink
          # by default we are integrating with develop
          cl_ref: \${{ github.event.inputs.cl_branch_ref }}
          # commit of the caller branch
          dep_starknet_sha: \${{ github.sha }}
          push_tag: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:custom.\${{ github.sha }}
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_PRIVATE_GHA_PULL: \${{ secrets.QA_PRIVATE_GHA_PULL }}
          GOPRIVATE: github.com/smartcontractkit/chainlink-starknet
  e2e_cutsom_run_smoke_tests:
    name: E2E Custom Run Smoke Tests
    runs-on: ubuntu-latest
    needs: [ e2e_custom_build_custom_chainlink_image ]
    environment: integration
    env:
      CGO_ENABLED: 1
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: E2E Custom Run Smoke Tests
        continue-on-error: true

      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@7d405e28e1419c0a48198793e6647005c409f4cf # v2.0.4
        with:
          test_command_to_run: make e2e_test
          test_download_vendor_packages_command: cd integration-tests && go mod download
          cl_repo: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: custom.\${{ github.sha }}
          publish_report_paths: \\"./tests-smoke-report.xml\\"
          publish_check_name: Smoke Test Results
          artifacts_location: /home/runner/work/chainlink-starknet/chainlink-starknet/tests/e2e/logs
          token: \${{ secrets.GITHUB_TOKEN }}
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 20`] = `
"name: gauntlet

on:
  push:


jobs:
  gauntlet_build:
    name: Gauntlet Build
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Gauntlet Build
        continue-on-error: true

      - uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      - name: Setup Node \${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@v2
        with:
          node-version: \${{ steps.tool-versions.outputs.nodejs_version }}
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Run Gauntlet
        run: yarn gauntlet

  gauntlet_format:
    name: Gauntlet Format
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Gauntlet Format
        continue-on-error: true

      - uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      - name: Setup Node \${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@v2
        with:
          node-version: \${{ steps.tool-versions.outputs.nodejs_version }}
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint:format

  gauntlet_run_tests:
    name: Gauntlet Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Gauntlet Run Tests
        continue-on-error: true

      - uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions

      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup Node \${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@v2
        with:
          node-version: \${{ steps.tool-versions.outputs.nodejs_version }}
      - name: Install
        run: nix develop -c yarn install --frozen-lockfile
      - name: Test
        run: nix develop -c yarn test
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 21`] = `
"##
# This workflow needs to be ran because \`lint\` is a required check and
# we conditionally only run the \`golangci-lint\` workflow when certain paths 
# change.
# If the workflow does not run, the required check will never pass. This is
# GitHub's workaround:
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#example
##

name: golangci-lint

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths-ignore:
      - '**.go'
  pull_request:
    paths-ignore:
      - '**.go'

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: lint
        continue-on-error: true

      - run: 'echo \\"No job required\\" '
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 22`] = `
"##
# NOTE: any changes to the event triggers or the paths here should be reflected in:
#       golangci-lint-paths-ignore.yml
##

name: golangci-lint

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths:
      - '**.go'
  pull_request:
    paths:
      - '**.go'

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: lint
        continue-on-error: true
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && !startsWith(github.head_ref, 'release/'))
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or \`latest\` to use the latest version
          version: v1.48.0

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --timeout=10m0s

          # Optional: show only new issues if it's a pull request. The default value is \`false\`.
          only-new-issues: true
          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 23`] = `
"name: Integration Chaos Test
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    tags:
      - '*'
jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: \${{ secrets.QA_AWS_REGION }}
          role-to-assume: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: core/chainlink.Dockerfile
          # comma separated like: KEY1=VAL1,KEY2=VAL2,...
          build-args: COMMIT_SHA=\${{ github.sha }}
          tags: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:latest.\${{ github.sha }}
          push: true

  chaos:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: EVM Chaos Tests
    runs-on: ubuntu-latest
    needs:
      - build-chainlink
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: EVM Chaos Tests
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Tests
        uses: smartcontractkit/ctf-ci-e2e-action@v1.0.4
        with:
          test_command_to_run: make test_chaos
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.\${{ github.sha }}
          artifacts_location: ./integration-tests/chaos/logs
          publish_check_name: EVM Chaos Test Results
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 24`] = `
"# This is a dummy file so when changes occur that do not need smoke tests ran we can still have the check be required
name: Integration Tests
on:
  pull_request:
    # keep these paths identical to the integration-tests.yml
    paths-ignore:
      - \\"**/*.go\\"
      - \\"**/*go.sum\\"
      - \\"**/*go.mod\\"
      - \\".github/workflows/integration-tests.yml\\"

jobs:
  # Dummy required checks and verification of test enviornment
  eth-smoke-tests:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: ETH Smoke Tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: ETH Smoke Tests
        continue-on-error: true

      - run: echo \\"No smoke tests required but we will still check the env setup\\"
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - name: Testing the test environment setup
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/setup-run-tests-environment@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
  solana-smoke-tests:
    environment: integration
    name: Solana Smoke Tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solana Smoke Tests
        continue-on-error: true

      - run: echo \\"No smoke tests required\\"
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 25`] = `
"name: Integration Tests
on:
  pull_request:
    # keep these paths identical to the integration-tests-ignored.yml
    paths:
      - \\"**/*.go\\"
      - \\"**/*go.sum\\"
      - \\"**/*go.mod\\"
      - \\".github/workflows/integration-tests.yml\\"

# Only run 1 of this workflow at a time per PR
concurrency:
  group: integration-tests-chainlink-\${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - name: Build Image
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/build-image@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          cl_repo: smartcontractkit/chainlink
          cl_ref: \${{ github.sha }}
          push_tag: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink:latest.\${{ github.sha }}
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}

  eth-smoke-tests:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: ETH Smoke Tests
    runs-on: ubuntu-latest
    needs: [ build-chainlink ]
    env:
      CHAINLINK_COMMIT_SHA: \${{ github.sha }}
      CHAINLINK_ENV_USER: \${{ github.actor }}
      TEST_TRIGGERED_BY: core-CI-eth
      TEST_LOG_LEVEL: debug
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: ETH Smoke Tests
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          test_command_to_run: make test_smoke_simulated args=\\"-nodes=30\\"
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.\${{ github.sha }}
          artifacts_location: ./integration-tests/smoke/logs
          publish_check_name: EVM Smoke Test Results
          triggered_by: \${{ env.TEST_TRIGGERED_BY }}
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
      - name: cleanup
        if: always()
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/cleanup@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          triggered_by: \${{ env.TEST_TRIGGERED_BY }}

  ### Solana Section

  solana-build-contracts:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: Solana Build Artifacts
    runs-on: ubuntu-latest
    container:
      image: projectserum/build:v0.24.2
      env:
        RUSTUP_HOME: \\"/root/.rustup\\"
        FORCE_COLOR: 1
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solana Build Artifacts
        continue-on-error: true
      - name: Checkout the solana repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
        with:
          repository: smartcontractkit/chainlink-solana
          ref: \${{ env.solana_sha }}
      - name: Build contracts
        uses: smartcontractkit/chainlink-solana/.github/actions/build_contract_artifacts@691e86b1e3b27e6b90830661499a5c372224fea1 # stable action on 18/07/2022
        with:
          ref: \${{ env.solana_sha }}

  solana-smoke-tests:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: Solana Smoke Tests
    runs-on: ubuntu-latest
    needs: [ build-chainlink, solana-build-contracts ]
    env:
      CHAINLINK_COMMIT_SHA: \${{ github.sha }}
      CHAINLINK_ENV_USER: \${{ github.actor }}
      TEST_TRIGGERED_BY: core-CI-solana
      TEST_LOG_LEVEL: debug
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solana Smoke Tests
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
        with:
          repository: smartcontractkit/chainlink-solana
          ref: \${{ env.solana_sha }}
      - name: Run Tests
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          test_command_to_run: make test_smoke
          cl_repo: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.QA_AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.\${{ github.sha }}
          download_contract_artifacts_path: contracts/target/deploy
          artifacts_location: /home/runner/work/chainlink-solana/chainlink-solana/tests/e2e/logs
          publish_check_name: Solana Smoke Test Results
          triggered_by: \${{ env.TEST_TRIGGERED_BY }}
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
      - name: cleanup
        if: always()
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/cleanup@bc093a9a1fccd7effb4fc9e7c5f9694710922d76 # v2.0.11
        with:
          triggered_by: \${{ env.TEST_TRIGGERED_BY }}
  ### End Solana Section
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 26`] = `
"name: Lint GH Workflows
on:
  push:
jobs:
  lint_workflows:
    name: Validate Github Action Workflows
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Validate Github Action Workflows
        continue-on-error: true
      - name: Check out Code
        uses: actions/checkout@v3
      - name: Run actionlint
        uses: reviewdog/action-actionlint@a0541743e79d2ce4ee65276807ac493a93149b7c # v1.23.0
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 27`] = `
"name: Linting
on:
  push:
jobs:
  golangci:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Linting
        continue-on-error: true

      - name: Check out Code
        uses: actions/checkout@v3
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: go-version
      - run: echo \${{ steps.go-version.outputs.golang_version }}
      - name: Install Go \${{ steps.go-version.outputs.golang_version }}
        uses: actions/setup-go@v3
        with:
          go-version: \${{ steps.go-version.outputs.golang_version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: v1.47.3

  vulnerabilities-check:
    name: Check for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Check for Vulnerabilities
        continue-on-error: true

      - name: Check out Code
        uses: actions/checkout@v3
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: go-version
      - run: echo \${{ steps.go-version.outputs.golang_version }}
      - name: Install Go \${{ steps.go-version.outputs.golang_version }}
        uses: actions/setup-go@v3
        with:
          go-version: \${{ steps.go-version.outputs.golang_version }}
      - name: Write Go List
        run: go list -json -deps ./... > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@v1.0.2

  actionlint:
    name: Validate github action workflows
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Validate github action workflows
        continue-on-error: true

      - name: Check out Code
        uses: actions/checkout@v3
      - name: Install asdf dependencies
        uses: asdf-vm/actions/install@v1.1.0
      - name: Run actionlint
        run: actionlint
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 28`] = `
"name: Test & build

on:
  push:
    branches:
      - master
      - develop
  pull_request: ~

jobs:
  packages:
    name: Verify dependency package archives
    runs-on: [ self-hosted, sdlc-ghr-prod ]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Verify dependency package archives
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Re-download dependencies & verify checksum
        run: yarn install --check-cache

  run-integration-tests:
    name: Run integration tests
    runs-on: [ self-hosted, sdlc-ghr-prod ]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Run integration tests
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn
        run: npm install -g yarn
      - run: yarn install
      - run: yarn setup
      - run: timeout 300 yarn test:ci:integration
  # Disable Codecov until we can make it reliable: sc-22561
  #      - uses: codecov/codecov-action@v2
  #        with:
  #          flags: integration
  #          fail_ci_if_error: false # TODO: Set back to true once coverage reports are consistent
  #          override_commit: \${{ github.sha }} # PR merge commit, what checkout@v2 uses by default

  run-unit-tests:
    name: Run unit tests
    runs-on: [ self-hosted, sdlc-ghr-prod ]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Run unit tests
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn
        run: npm install -g yarn
      - run: yarn install
      - run: yarn setup
      - run: yarn test:ci:unit
  # Disable Codecov until we can make it reliable: sc-22561
  #      - uses: codecov/codecov-action@v2
  #        with:
  #          flags: unit
  #          fail_ci_if_error: false # TODO: Set back to true once coverage reports are consistent
  #          override_commit: \${{ github.sha }} # PR merge commit, what checkout@v2 uses by default

  run-basic-checks:
    name: Run linters
    runs-on: [ self-hosted, sdlc-ghr-prod ]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Run linters
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn
        run: npm install -g yarn
      - run: yarn install
      - run: yarn setup
      - run: yarn lint
      - run: yarn setup-tests
      - run: yarn format:check

  run-docmentation-check:
    name: Documentation generation test
    runs-on: [ self-hosted, sdlc-ghr-prod ]
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Documentation generation test
        continue-on-error: true

      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn
        run: |
          npm install -g yarn
          yarn install
      - name: Build Repo
        run: yarn setup
      - name: Test Master List Generation
        run: yarn generate:master-list -v
      - name: Test README Generation
        run: yarn generate:readme -a -v

  # Read build strategy matrix of adapters, from a json file
  matrix-adapters:
    runs-on: ubuntu-latest
    outputs:
      matrix: \${{ steps.create-matrix.outputs.result }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: matrix-adapters
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Generate job matrix
        id: create-matrix
        run: yarn generate:gha:matrix

  build-adapters:
    needs: [ run-basic-checks, matrix-adapters ]
    name: (\${{ matrix.adapter.type }}) Build \${{matrix.adapter.name}} adapter
    runs-on: ubuntu-latest
    strategy:
      matrix: \${{fromJson(needs.matrix-adapters.outputs.matrix)}}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: (\${{ matrix.adapter.type }}) Build \${{matrix.adapter.name}} adapter
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install yarn deps
        run: yarn
      - name: Generate docker-compose file
        run: yarn generate:docker-compose
      - run: docker-compose -f docker-compose.generated.yaml build \${{ matrix.adapter.name }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 29`] = `
"##
# This workflow needs to be ran because \`Operator UI Tests\` is a required check
# and we conditionally only run the \`Operator UI\` workflow when certain paths
# change.
# If the workflow does not run, the required check will never pass. This is
# GitHub's workaround:
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#example
##

name: Operator UI

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths-ignore:
      - 'operator_ui/**'
      - yarn.lock
      - 'tools/ci/**'
  pull_request:
    paths-ignore:
      - 'operator_ui/**'
      - yarn.lock
      - 'tools/ci/**'

jobs:
  operator-ui:
    name: Operator UI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Operator UI Tests
        continue-on-error: true

      - run: 'echo \\"No job required\\" '
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 30`] = `
"##
# NOTE: any changes to the event triggers or the paths here should be reflected in:
#       operator-ui-paths-ignore.yml
##

name: Operator UI

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths:
      - 'operator_ui/**'
      - yarn.lock
      - 'tools/ci/**'
  pull_request:
    paths:
      - 'operator_ui/**'
      - yarn.lock
      - 'tools/ci/**'

jobs:
  operator-ui:
    name: Operator UI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Operator UI Tests
        continue-on-error: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: \\"16\\"
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: \${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles('yarn.lock') }}
          restore-keys: |
            \${{ runner.os }}-build-\${{ env.cache-name }}-
            \${{ runner.os }}-build-
            \${{ runner.os }}-
      - name: Run yarn install
        run: yarn install --frozen-lockfile
      - name: Run Operator UI tests
        run: ./tools/ci/operator_ui_test
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 31`] = `
"name: Performance Tests
on:
  workflow_dispatch:
    inputs:
      focus:
        description: cron|directrequest|flux|keeper|ocr|vrf|suite
        required: true
        default: suite
        type: string
jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Build Chainlink Image
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: \${{ secrets.QA_AWS_REGION }}
          role-to-assume: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: core/chainlink.Dockerfile
          # comma separated like: KEY1=VAL1,KEY2=VAL2,...
          build-args: COMMIT_SHA=\${{ github.sha }}
          tags: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com/chainlink:latest.\${{ github.sha }}
          push: true
  run_tests:
    environment: integration
    name: run core evm \${{ github.event.inputs.focus }} performance tests
    runs-on: ubuntu-latest
    needs: build-chainlink
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: run core evm \${{ github.event.inputs.focus }} performance tests
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Tests
        uses: smartcontractkit/ctf-ci-e2e-action@41848377703354a32d355d3f2f7cb3b9e3049b8c
        with:
          test_command_to_run: make test_perf args=\\"--procs=10 --focus=\${{ github.event.inputs.focus }}\\"
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: \${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com/chainlink
          cl_image_tag: latest.\${{ github.sha }}
          artifacts_location: ./integration-tests/performance/logs
          publish_report_paths: ./tests-perf-report.xml
          QA_AWS_REGION: \${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: \${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: \${{ secrets.QA_KUBECONFIG }}
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
      - name: Publish pprof artifacts
        if: \${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: pprof_results
          path: ./integration-tests/performance/logs
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 32`] = `
"name: relayer

on:
  push:


defaults:
  run:
    working-directory: relayer

jobs:
  relayer_run_unit_tests:
    name: Relayer Run Unit Tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres@localhost:5432/postgres?sslmode=disable
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Relayer Run Unit Tests
        continue-on-error: true

      - name: Checkout sources
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1

      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Compile module
        run: nix develop -c go build -v ./pkg/...

      - name: Run unit tests
        run: nix develop -c go test -v ./pkg/... -tags integration

      - name: Run tests with the race detector enabled
        run: nix develop -c go test -v ./pkg/... -race -count=10 -tags integration
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 33`] = `
"name: Starknet Gauntlet CLI Release

on:
  push:
    tags:
      - \\"@chainlink/starknet-gauntlet-cli@[0-9]+.[0-9]+.[0-9]\\"

jobs:
  starknet-gauntlet-cli-release:
    name: Starknet Gauntlet CLI Release
    runs-on: ubuntu-latest
    steps:
      # Checkout this repository
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Starknet Gauntlet CLI Release
        continue-on-error: true

      - name: Checkout Repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      # Get tool versions
      - name: Get tool versions
        uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      # Install nix
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      # Set up Node.js
      - name: Setup Node.js \${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@master
        with:
          node-version: \${{ steps.tool-versions.outputs.nodejs_version }}
      # Install dependencies using yarn
      - name: Install Dependencies
        run: nix develop -c yarn install --frozen-lockfile
      # Build gauntlet binary
      - name: Build Gauntlet
        run: nix develop -c yarn bundle
      # Store gauntlet-cli version
      - name: Set Env Variables
        run: echo \\"STARKNET_GAUNTLET_CLI=$(npm info @chainlink/starknet-gauntlet-cli version)\\" >> $GITHUB_ENV
      # Upload gauntlet binary to gauntlet-cli release
      - name: Upload Gauntlet Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: \${{ secrets.GITHUB_TOKEN }}
          file: bin/chainlink-starknet-*
          file_glob: true
          tag: |
            @chainlink/starknet-gauntlet-cli@\${{ env.STARKNET_GAUNTLET_CLI }}
          overwrite: false
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 34`] = `
"name: Starknet Relayer Release

on:
  push:
    tags:
      - \\"@chainlink/starknet-relayer@[0-9]+.[0-9]+.[0-9]\\"

jobs:
  starknet-relayer-release:
    name: Release Starknet Relayer
    runs-on: ubuntu-latest
    steps:
      # Checkout this repository
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Release Starknet Relayer
        continue-on-error: true

      - name: Checkout Repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      # Store starknet version
      - name: Set Env Variables
        run: echo \\"STARKNET_RELAYER=$(npm info @chainlink/starknet-relayer version)\\" >> $GITHUB_ENV
      # Release code under vX.X.X
      - name: Release Code
        uses: softprops/action-gh-release@v1
        with:
          tag_name: relayer/v\${{ env.STARKNET_RELAYER }}
          token: \${{ secrets.GITHUB_TOKEN }}
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 35`] = `
"name: Release

on:
  push:
    branches:
      # On develop, we build and publish containers to our *private* ECR repo

      # Ex. If the value of the field \\"version\\" in the \\"package.json\\" file of the coingecko adapter is \\"0.0.5-beta\\",
      # The \\"coingecko-adapter\\" container will be resolvable with the following specifiers:
      # coingecko-adapter:0.0.5-beta
      # docker pull <accountid>.dkr.ecr.<region>.amazonaws.com/adapters/coingecko-adapter:0.0.5-beta

      - develop

      # Ex. If the value of the field \\"version\\" in the \\"package.json\\" file of the coingecko adapter is \\"0.0.5-beta\\",
      # The \\"coingecko-adapter\\" container will be resolvable with the following specifiers:
      # coingecko-adapter:0.0.5-beta

      # The ECR registry is reachable at public.ecr.aws/chainlink/adapters/

      # You would be able to pull the coingecko adapter with the following commands:
      # docker pull public.ecr.aws/chainlink/adapters/coingecko-adapter:0.0.5-beta
      - master

  # A workflow dispatch would trigger the same behaviour as a push to the master branch
  workflow_dispatch:


env:
  publicecr-name: chainlink

jobs:
  matrix-adapters:
    runs-on: ubuntu-latest
    outputs:
      matrix: \${{ steps.create-matrix.outputs.result }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: matrix-adapters
        continue-on-error: true

      - uses: actions/checkout@v2
      - name: Generate job matrix
        id: create-matrix
        uses: ./.github/actions/release/matrix-adapters

  publish-artifacts:
    needs: [ matrix-adapters ]
    runs-on: ubuntu-latest
    name: (\${{ matrix.adapter.type }}) Publish \${{ matrix.adapter.name }} adapter Docker image
    strategy:
      matrix: \${{fromJson(needs.matrix-adapters.outputs.matrix)}}
      max-parallel: 35
    environment: release
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: (\${{ matrix.adapter.type }}) Publish \${{ matrix.adapter.name }} adapter Docker image
        continue-on-error: true

      - uses: actions/checkout@v2

      #
      #
      # ----- Private ECR publishing logic -----
      #
      #
      - name: Configure AWS Credentials for SDLC Private ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: \${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
          aws-region: \${{ secrets.AWS_REGION_ECR_PRIVATE }}
      - name: Publish adapter to private ECR
        id: publish-adapter-versioned-private-ecr
        uses: ./.github/actions/release/publish-artifacts
        with:
          # Having both branch and latest be null means that the underlying action will only publish semver-style versions.
          # Take a look at scripts/src/generate-image-name/__snapshots__/lib.test.ts.snap for example image name outputs based on
          # branch / latest inputs
          branch: null
          latest: null

          image-prefix: \${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.\${{ secrets.AWS_REGION_ECR_PRIVATE }}.amazonaws.com/adapters/
          adapter-name: \${{ matrix.adapter.name }}
          aws-region: \${{ secrets.AWS_REGION_ECR_PRIVATE }}
          aws-ecr-private: 'true' # Use of string intentional for evaluation
          aws-ecr-account-ids: \${{ secrets.AWS_PRIVATE_ECR_SECONDARY_ACCOUNT_ACCESS_IDS }}

      # For our private ECR repo that we use for staging, we keep the latest tag around to have staging auto-update
      - if: steps.publish-adapter-versioned-private-ecr.outputs.image-exists == 'false'
        name: Publish adapter to private ECR, with latest tag
        uses: ./.github/actions/release/publish-artifacts
        with:
          branch: null
          latest: true

          image-prefix: \${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.\${{ secrets.AWS_REGION_ECR_PRIVATE }}.amazonaws.com/adapters/
          adapter-name: \${{ matrix.adapter.name }}
          aws-region: \${{ secrets.AWS_REGION_ECR_PRIVATE }}
          aws-ecr-private: 'true' # Use of string intentional for evaluation
          aws-ecr-account-ids: \${{ secrets.AWS_PRIVATE_ECR_SECONDARY_ACCOUNT_ACCESS_IDS }}

      #
      #
      # ----- Public ECR publishing logic -----
      #
      #
      - name: Configure AWS Credentials for SDLC Public ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: \${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
          aws-region: \${{ secrets.AWS_REGION_ECR_PUBLIC }}
          role-duration-seconds: 1200

      - if: github.ref == 'refs/heads/master'
        name: Publish adapter to public ECR
        id: publish-adapter-versioned-public-ecr
        uses: ./.github/actions/release/publish-artifacts
        with:
          branch: null
          latest: null

          image-prefix: public.ecr.aws/\${{ env.publicecr-name }}/adapters/
          adapter-name: \${{ matrix.adapter.name }}
          aws-region: us-east-1
          aws-ecr-private: 'false' # Use of string intentional for evaluation
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 36`] = `
"name: Soak test

on:
  pull_request: ~

jobs:
  run-basic-checks:
    name: Run Soak Tests Against Changed Adapters
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Run Soak Tests Against Changed Adapters
        continue-on-error: true

      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be \\"open\\", \\"closed\\", or \\"all\\".  Defaults to \\"open\\".
          state: all
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: \${{ secrets.QA_SDLC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.QA_SDLC_AWS_SECRET_KEY }}
          aws-region: \${{ secrets.QA_SDLC_AWS_REGION }}
          role-to-assume: \${{ secrets.QA_SDLC_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: \${{ secrets.QA_SDLC_KUBECONFIG }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Yarn and setup project
        run: |
          npm install -g yarn
          yarn install
          yarn setup
      - name: Use GH CLI to get pr info
        id: get-pr-info
        env:
          GITHUB_TOKEN: \${{ secrets.QA_GITHUB_TOKEN }}
          PR_NUMBER: \${{ steps.findPr.outputs.pr }}
        run: |
          set -x
          CHANGED_FILES_NAME=./changedFiles.txt
          gh pr view \${PR_NUMBER} --json files --jq '.files.[].path' > \${CHANGED_FILES_NAME}
          ADAPTERS_LIST=\\"$(yarn get-changed-adapters \\"\${CHANGED_FILES_NAME}\\")\\"

          # export adapters from this step
          echo \\"::set-output name=ADAPTERS_LIST::\${ADAPTERS_LIST}\\"
      - name: Remove adapters that have no fluxconfig
        id: adapters-list
        env:
          ADAPTER_NAMES: \${{ steps.get-pr-info.outputs.ADAPTERS_LIST }}
        run: |
          set -x
          ADAPTERS_LIST=
          for adapter in \${ADAPTER_NAMES}; do
            echo \\"\${adapter}\\"
            DONT_ADD=0
            yarn qa:flux:configure exists \${adapter} blank || DONT_ADD=1
            if [ $DONT_ADD = '1' ]; then
              continue
            fi
            ADAPTERS_LIST=\\"\${ADAPTERS_LIST} \${adapter}\\"
          done
          ADAPTERS_LIST=\\"$(echo \${ADAPTERS_LIST} | xargs)\\"
          # export adapters from this step
          echo \\"::set-output name=ADAPTERS_LIST::\${ADAPTERS_LIST}\\"
      - name: Build adapters
        env:
          PR_NUMBER: \${{ steps.findPr.outputs.pr }}
          ADAPTER_NAMES: \${{ steps.adapters-list.outputs.ADAPTERS_LIST }}
          IMAGE_PREFIX: \${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com/adapters/
        run: |
          IMAGE_TAG=pr\${PR_NUMBER}
          IMAGE_TAG=\${IMAGE_TAG} IMAGE_PREFIX=\${IMAGE_PREFIX} yarn generate:docker-compose
          BUILD_NAMES=
          if [ -n \\"$ADAPTER_NAMES\\" ]; then
            for adapter in \${ADAPTER_NAMES}; do
              BUILD_NAMES=\\"\${BUILD_NAMES} \${adapter}-adapter\\"
            done
            docker-compose -f docker-compose.generated.yaml build \${BUILD_NAMES}
            for adapter in \${ADAPTER_NAMES}; do
              docker push \${IMAGE_PREFIX}\${adapter}-adapter:\${IMAGE_TAG}
            done
          fi
      - name: Deploy adapters
        env:
          PR_NUMBER: \${{ steps.findPr.outputs.pr }}
          ADAPTER_NAMES: \${{ steps.adapters-list.outputs.ADAPTERS_LIST }}
          IMAGE_PREFIX: \${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com/adapters/
          GITHUB_TOKEN: \${{ secrets.QA_GITHUB_TOKEN }}
        run: |
          IMAGE_TAG=pr\${PR_NUMBER}
          # pull down the chainlink adapter helm chart
          helm repo add chainlink https://raw.githubusercontent.com/smartcontractkit/charts/gh-pages/ --password \${GITHUB_TOKEN} --username dummy
          # deploy all the adapters
          if [ -n \\"$ADAPTER_NAMES\\" ]; then
            for adapter in \${ADAPTER_NAMES}; do
              yarn qa:adapter start \${adapter} \${PR_NUMBER} \${IMAGE_TAG}
            done
          fi
      - name: Build the k6 payloads and images
        env:
          PR_NUMBER: \${{ steps.findPr.outputs.pr }}
          ADAPTER_NAMES: \${{ steps.adapters-list.outputs.ADAPTERS_LIST }}
          IMAGE_PREFIX: \${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com/k6
        run: |
          IMAGE_TAG=pr\${PR_NUMBER}
          OUTER_DIR=$(pwd)
          if [ -n \\"$ADAPTER_NAMES\\" ]; then
            for adapter in \${ADAPTER_NAMES}; do
              cd \${OUTER_DIR}
              # create the config
              yarn qa:flux:configure k6payload \${adapter} \${PR_NUMBER}
              # Move to the k6 package and build/push
              cd ./packages/k6
              # configure docker env
              echo \\"\\" >> ./.env
              echo \\"PAYLOAD_GENERATED=true\\" >> ./.env
              echo \\"CI_ADAPTER_NAME=\${adapter}\\" >> ./.env
              echo \\"QA_RELEASE_TAG=\${PR_NUMBER}\\" >> ./.env
              echo \\"PR_NUMBER=\${PR_NUMBER}\\" >> ./.env
              cat ./.env
              yarn build
              docker build -t \${IMAGE_PREFIX}:\${IMAGE_TAG}-\${adapter} .
              docker push \${IMAGE_PREFIX}:\${IMAGE_TAG}-\${adapter}
            done
          fi
      - name: Deploy k6
        env:
          PR_NUMBER: \${{ steps.findPr.outputs.pr }}
          ADAPTER_NAMES: \${{ steps.adapters-list.outputs.ADAPTERS_LIST }}
        run: |
          IMAGE_TAG=pr\${PR_NUMBER}
          cd ./packages/k6
          if [ -n \\"$ADAPTER_NAMES\\" ]; then
            for adapter in \${ADAPTER_NAMES}; do
              helm upgrade k6-\${PR_NUMBER}-\${adapter} ./k8s \\\\
                --install \\\\
                --namespace adapters \\\\
                --create-namespace \\\\
                -f ./k8s/values.yaml \\\\
                --set image.tag=\${IMAGE_TAG}-\${adapter} \\\\
                --set name=k6-\${PR_NUMBER}-\${adapter} \\\\
                --wait
            done
          fi
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 37`] = `
"##
# This workflow needs to be ran because \`Solidity\` is a required check and we 
# conditionally only run the \`Solidity\` workflow when certain paths change.
# If the workflow does not run, the required check will never pass. This is
# GitHub's workaround:
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#example
##

name: Solidity

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths-ignore:
      - 'contracts/**'
      - yarn.lock
      - 'tools/ci/**'
  pull_request:
    paths-ignore:
      - 'contracts/**'
      - yarn.lock
      - 'tools/ci/**'

jobs:
  solidity-coverage:
    name: Solidity Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solidity Coverage
        continue-on-error: true

      - run: 'echo \\"No job required\\" '
  solidity:
    name: Solidity
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solidity
        continue-on-error: true

      - run: 'echo \\"No job required\\" '
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 38`] = `
"##
# NOTE: any changes to the event triggers or the paths here should be reflected in:
#       solidity-paths-ignore.yml
##

name: Solidity

on:
  push:
    branches:
      - staging
      - trying
      - rollup
    paths:
      - 'contracts/**'
      - yarn.lock
      - 'tools/ci/**'
  pull_request:
    paths:
      - 'contracts/**'
      - yarn.lock
      - 'tools/ci/**'

jobs:
  solidity-coverage:
    name: Solidity Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solidity Coverage
        continue-on-error: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: \\"16\\"
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: \${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles('yarn.lock') }}
          restore-keys: |
            \${{ runner.os }}-build-\${{ env.cache-name }}-
            \${{ runner.os }}-build-
            \${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - name: Run coverage
        env:
          NODE_OPTIONS: \\"--max-old-space-size=6144\\"
        run: ./tools/ci/solidity_coverage

  solidity:
    name: Solidity
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Solidity
        continue-on-error: true
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: \\"16\\"
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Yarn cache
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: |
            ~/.npm
            ~/.cache
            **/node_modules
          key: \${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles('yarn.lock') }}
          restore-keys: |
            \${{ runner.os }}-build-\${{ env.cache-name }}-
            \${{ runner.os }}-build-
            \${{ runner.os }}-
      - run: yarn install --frozen-lockfile
      - name: Compile all contracts
        run: ./contracts/scripts/native_solc_compile_all
      - name: Verify local solc binaries
        run: ./tools/ci/check_solc_hashes
      - name: Run tests
        run: ./tools/ci/solidity_test_hardhat
      - name: Run prepublish NPM test
        run: ./tools/ci/prepublish_npm_test
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 39`] = `
"name: Static Analysis
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '23 19 * * 4'
jobs:
  codeQL:
    name: CodeQL Checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: CodeQL Checks
        continue-on-error: true

      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 40`] = `
"name: Sync develop from smartcontractkit/chainlink

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '*/30 * * * *'

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Sync
        continue-on-error: true
      - uses: actions/checkout@v2
        with:
          ref: develop
        if: env.GITHUB_REPOSITORY != 'smartcontractkit/chainlink'
      - name: Sync
        run: |
          git remote add upstream \\"https://github.com/smartcontractkit/chainlink.git\\"
          COMMIT_HASH_UPSTREAM=$(git ls-remote upstream develop | grep -P '^[0-9a-f]{40}\\\\trefs/heads/develop$' | cut -f 1)
          COMMIT_HASH_ORIGIN=$(git ls-remote origin develop | grep -P '^[0-9a-f]{40}\\\\trefs/heads/develop$' | cut -f 1)
          if [ \\"$COMMIT_HASH_UPSTREAM\\" = \\"$COMMIT_HASH_ORIGIN\\" ]; then
            echo \\"Both remotes have develop at $COMMIT_HASH_UPSTREAM. No need to sync.\\"
          else
            echo \\"upstream has develop at $COMMIT_HASH_UPSTREAM. origin has develop at $COMMIT_HASH_ORIGIN. Syncing...\\"
            git fetch upstream
            git push origin upstream/develop:develop
          fi
        if: env.GITHUB_REPOSITORY != 'smartcontractkit/chainlink'
"
`;

exports[`updateWorkflow loads workflow file paths then updates them 41`] = `
"name: Tests
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: \${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: \${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: unit
        continue-on-error: true

      - name: Checkout the Repo
        uses: actions/checkout@v3
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: go-version
      - run: echo \${{ steps.go-version.outputs.golang_version }}
      - name: Install Go \${{ steps.go-version.outputs.golang_version }}
        uses: actions/setup-go@v3
        with:
          go-version: \${{ steps.go-version.outputs.golang_version }}
      - name: Cache Vendor Packages
        uses: actions/cache@v3
        id: cache-packages
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: \${{ runner.os }}-go2-\${{ hashFiles('**/go.sum') }}
          restore-keys: |
            \${{ runner.os }}-go2-
      - name: Download Go Vendor Packages and Ginkgo
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: make install_ci
      - name: Run Tests
        run: |
          PATH=$PATH:$(go env GOPATH)/bin
          export PATH
          make test_unit
      - name: Code Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./unit-test-coverage.out
          name: codecov-umbrella
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ./tests-unit-report.xml
          github_token: \${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Report
          comment_mode: always
      - name: Publish Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: ./logs
"
`;
